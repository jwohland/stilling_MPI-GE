#!/bin/bash
##############################################################################
# ESG Federation download script
#
# Template version: 1.2
# Generated by esgf-data.dkrz.de - 2021/01/25 10:02:17
# Search URL: https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r100i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r099i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r098i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r097i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r096i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r095i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r094i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r093i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r092i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r087i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r091i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r090i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r089i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r086i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r085i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r084i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r083i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r088i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r075i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r082i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r081i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r080i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r079i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r078i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r077i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r076i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r074i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r073i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r072i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r071i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r070i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r069i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r068i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r067i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r066i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r065i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r064i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r063i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r062i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r061i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r060i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r059i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r057i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r056i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r058i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r055i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r054i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r053i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r052i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r051i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r050i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r049i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r048i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r047i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r046i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r045i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r044i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r043i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r042i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r041i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r040i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r039i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r038i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r037i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r036i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r035i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r034i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r033i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r032i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r031i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r030i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r029i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r028i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r027i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r026i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r025i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r024i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r022i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r021i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r020i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r023i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r019i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r018i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r017i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r016i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r014i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r013i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r012i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r011i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r015i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r010i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r009i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r008i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r007i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r006i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r005i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r004i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r003i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r002i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r001i1850p3.v20190123|esgf1.dkrz.de
#
###############################################################################
# first be sure it's bash... anything out of bash or sh will break
# and the test will assure we are not using sh instead of bash
if [ $BASH ] && [ `basename $BASH` != bash ]; then
    echo "######## This is a bash script! ##############" 
    echo "Change the execution bit 'chmod u+x $0' or start with 'bash $0' instead of sh."
    echo "Trying to recover automatically..."
    sleep 1
    /bin/bash $0 $@
    exit $?
fi

version=1.3.2
CACHE_FILE=.$(basename $0).status
openId=
search_url='https://esgf-data.dkrz.de/esg-search/wget/?distrib=false&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r100i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r099i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r098i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r097i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r096i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r095i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r094i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r093i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r092i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r087i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r091i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r090i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r089i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r086i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r085i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r084i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r083i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r088i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r075i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r082i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r081i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r080i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r079i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r078i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r077i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r076i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r074i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r073i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r072i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r071i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r070i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r069i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r068i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r067i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r066i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r065i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r064i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r063i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r062i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r061i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r060i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r059i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r057i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r056i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r058i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r055i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r054i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r053i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r052i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r051i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r050i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r049i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r048i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r047i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r046i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r045i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r044i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r043i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r042i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r041i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r040i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r039i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r038i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r037i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r036i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r035i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r034i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r033i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r032i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r031i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r030i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r029i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r028i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r027i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r026i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r025i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r024i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r022i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r021i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r020i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r023i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r019i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r018i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r017i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r016i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r014i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r013i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r012i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r011i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r015i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r010i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r009i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r008i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r007i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r006i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r005i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r004i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r003i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r002i1850p3.v20190123|esgf1.dkrz.de&dataset_id=mpi-ge.output1.MPI-M.MPI-ESM.1pctCO2.mon.atmos.sfcWind.r001i1850p3.v20190123|esgf1.dkrz.de'

#These are the embedded files to be downloaded
download_files="$(cat <<EOF--dataset.file.url.chksum_type.chksum
'sfcWind_Amon_MPI-ESM_1pctCO2_r001i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r001i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r001i1850p3_185001-199912.nc' 'SHA256' '5c0b518f21ffee485c61e18e74e87ceed4d63281daeab759d7095082498a88ff'
'sfcWind_Amon_MPI-ESM_1pctCO2_r002i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r002i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r002i1850p3_185001-199912.nc' 'SHA256' '208adf31018887920ad6c56d2ef7db08087823e0cef634b2d4199db1117c782b'
'sfcWind_Amon_MPI-ESM_1pctCO2_r003i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r003i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r003i1850p3_185001-199912.nc' 'SHA256' 'fbb316b9c29b9e206bb0410fd9baf4dab4f24488bcd2b57db775b70d03841c54'
'sfcWind_Amon_MPI-ESM_1pctCO2_r004i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r004i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r004i1850p3_185001-199912.nc' 'SHA256' '64b3e98ae9cea976537578452535a3f7373db3d742313a728e5109b7b36d8b5f'
'sfcWind_Amon_MPI-ESM_1pctCO2_r005i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r005i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r005i1850p3_185001-199912.nc' 'SHA256' 'e23cb76247f3b0faf1f61691cdedcce738d1ac32178641a09420b75d4d6b6913'
'sfcWind_Amon_MPI-ESM_1pctCO2_r006i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r006i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r006i1850p3_185001-199912.nc' 'SHA256' '903739bb46e2784dcabe6568d1b8d26f64bc77f3992e7bc513d12862758c7af3'
'sfcWind_Amon_MPI-ESM_1pctCO2_r007i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r007i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r007i1850p3_185001-199912.nc' 'SHA256' '2fda5cd224dd175812595a5f9c6fd6aad278095cc255cae325cb08dabe3a89cc'
'sfcWind_Amon_MPI-ESM_1pctCO2_r008i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r008i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r008i1850p3_185001-199912.nc' 'SHA256' 'a0be407195b65784b5360f2a7b92a6d3632a6f6bf5fe74493ecb987e6a135fa6'
'sfcWind_Amon_MPI-ESM_1pctCO2_r009i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r009i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r009i1850p3_185001-199912.nc' 'SHA256' 'f170374b449ee819ae7b3fba155d6984fafe8fbd85e0f556c77b400e6074c840'
'sfcWind_Amon_MPI-ESM_1pctCO2_r010i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r010i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r010i1850p3_185001-199912.nc' 'SHA256' '774f4be5531d81374f9db4a7032f24040cd12dbdda36b344f6787d63fb16f7cc'
'sfcWind_Amon_MPI-ESM_1pctCO2_r011i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r011i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r011i1850p3_185001-199912.nc' 'SHA256' '907c1de550a782a769e53004c1b10858c010a4430b6e99f5fb750c69120af216'
'sfcWind_Amon_MPI-ESM_1pctCO2_r012i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r012i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r012i1850p3_185001-199912.nc' 'SHA256' '229389422459d57c994bc01276abfa71397d5f95a020e74d7758ea281db05450'
'sfcWind_Amon_MPI-ESM_1pctCO2_r013i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r013i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r013i1850p3_185001-199912.nc' 'SHA256' 'c7918738154a892fcbff170ed52aa4f687dfa90368e0d3490e10952baf7d6189'
'sfcWind_Amon_MPI-ESM_1pctCO2_r014i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r014i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r014i1850p3_185001-199912.nc' 'SHA256' '4d685342f1a81a63894b6a9b6a834332a9222b66144e743284da98156c7ead36'
'sfcWind_Amon_MPI-ESM_1pctCO2_r015i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r015i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r015i1850p3_185001-199912.nc' 'SHA256' 'bdb5b6ed000c28c6c57dc365c0d1160b303881b7f1edea1d0969adf83637b774'
'sfcWind_Amon_MPI-ESM_1pctCO2_r016i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r016i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r016i1850p3_185001-199912.nc' 'SHA256' '0fd283b668d1d3f4b7cc462139ec5d35243a629d4274d37a29915d0ae2faed2a'
'sfcWind_Amon_MPI-ESM_1pctCO2_r017i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r017i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r017i1850p3_185001-199912.nc' 'SHA256' 'c2b9bc7bb0a12788ea186706487018565866fb322f7793baa377b7acd3f57e62'
'sfcWind_Amon_MPI-ESM_1pctCO2_r018i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r018i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r018i1850p3_185001-199912.nc' 'SHA256' 'bf0fbc5d3e0461578e0231a20a4c012a2b340494299b820a58bc23d0365acfd1'
'sfcWind_Amon_MPI-ESM_1pctCO2_r019i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r019i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r019i1850p3_185001-199912.nc' 'SHA256' 'b866eea79961d9ea793fe5e248250d11ea88a17d99612e51d6bef83858758109'
'sfcWind_Amon_MPI-ESM_1pctCO2_r020i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r020i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r020i1850p3_185001-199912.nc' 'SHA256' 'dfca852ec88b3e5e602014eff98729e9ac398cd48f2476f5660f18192d45d6f8'
'sfcWind_Amon_MPI-ESM_1pctCO2_r021i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r021i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r021i1850p3_185001-199912.nc' 'SHA256' '8a9cd62a456e15bd93644a78e00ba6d0af839cc57ad2945689a20e1047ca0ff8'
'sfcWind_Amon_MPI-ESM_1pctCO2_r022i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r022i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r022i1850p3_185001-199912.nc' 'SHA256' '101e649d5f9dea859fdd8ab3977b6994263b083eab8d23f17bf364741f166a2f'
'sfcWind_Amon_MPI-ESM_1pctCO2_r023i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r023i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r023i1850p3_185001-199912.nc' 'SHA256' 'd7da3993934d5cd208534e5c2eaaa53dcff44bfb11339bbc99b5af07c184e575'
'sfcWind_Amon_MPI-ESM_1pctCO2_r024i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r024i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r024i1850p3_185001-199912.nc' 'SHA256' '93e5ba7e29fc049ce7e04f4bbc33b302fba21a3d78088acd4f0eaa355dc860a8'
'sfcWind_Amon_MPI-ESM_1pctCO2_r025i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r025i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r025i1850p3_185001-199912.nc' 'SHA256' '5d0f3b14450df922e9f8967c0ab971f8ccad755232dfcf5f4a2457eaa7a271b2'
'sfcWind_Amon_MPI-ESM_1pctCO2_r026i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r026i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r026i1850p3_185001-199912.nc' 'SHA256' '45800c1b31be8567ca1e6615301703265e92bada43be704fa786d2e79f7492c1'
'sfcWind_Amon_MPI-ESM_1pctCO2_r027i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r027i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r027i1850p3_185001-199912.nc' 'SHA256' '2222e15f7b0016a1854692a9bee1f930c3a6ad6887824cd3ea0e7e065e5d01b8'
'sfcWind_Amon_MPI-ESM_1pctCO2_r028i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r028i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r028i1850p3_185001-199912.nc' 'SHA256' '8f976c6888756a3dc69c3563a9ee57cc5e87f4bc813b9ec3bac28cf5a0b5a445'
'sfcWind_Amon_MPI-ESM_1pctCO2_r029i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r029i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r029i1850p3_185001-199912.nc' 'SHA256' '0b81d541fd43eae53e1696bb7e45a8dcba2e7c10cd51416ee80fa8d3a87d766c'
'sfcWind_Amon_MPI-ESM_1pctCO2_r030i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r030i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r030i1850p3_185001-199912.nc' 'SHA256' '0c69b7f353463bad1066a3f7d92c3c5bcf9d0dbe60ad6710ab35c8bfdc1bb9ef'
'sfcWind_Amon_MPI-ESM_1pctCO2_r031i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r031i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r031i1850p3_185001-199912.nc' 'SHA256' '9d87cd3d0f9d9a1b5105dcee6715f69e707b957590d3f1f55a36e6bfd6de0ef8'
'sfcWind_Amon_MPI-ESM_1pctCO2_r032i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r032i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r032i1850p3_185001-199912.nc' 'SHA256' '7f6a48ed44a14c1e31e63ab696f0eb5e6f53ce81f3c065c98d6c382348fceb5c'
'sfcWind_Amon_MPI-ESM_1pctCO2_r033i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r033i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r033i1850p3_185001-199912.nc' 'SHA256' 'd0091390976c5a3dd2cfb0206fd12f17c03adcdecfd52de52baefdbd6b4e4455'
'sfcWind_Amon_MPI-ESM_1pctCO2_r034i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r034i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r034i1850p3_185001-199912.nc' 'SHA256' '55f52c80ea32c036751688aed22efa73d220de87a902d936c7415ffdf6515b56'
'sfcWind_Amon_MPI-ESM_1pctCO2_r035i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r035i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r035i1850p3_185001-199912.nc' 'SHA256' '905bcf8ea906dd37acd186e1dba5faff54324abd6ead6122eb36a883ebc4d47d'
'sfcWind_Amon_MPI-ESM_1pctCO2_r036i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r036i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r036i1850p3_185001-199912.nc' 'SHA256' '4e8c98520908527b81ec6678a2a0b6ecd6e9fade16d1be2fdb7e8299f7bb640d'
'sfcWind_Amon_MPI-ESM_1pctCO2_r037i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r037i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r037i1850p3_185001-199912.nc' 'SHA256' 'fef945fc2ffdb8617f3fba3e1c5160176a3cd33cf5ced65283e8a83128626cde'
'sfcWind_Amon_MPI-ESM_1pctCO2_r038i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r038i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r038i1850p3_185001-199912.nc' 'SHA256' 'e56a0c26720f36b5e69fde435d803bcfd6aa5ef191dfd57e1856f06bc6b1c894'
'sfcWind_Amon_MPI-ESM_1pctCO2_r039i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r039i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r039i1850p3_185001-199912.nc' 'SHA256' 'f92c580fde4cd3f1b9806e7751c911a65154dd7924393e28f65df86c52d1a0ab'
'sfcWind_Amon_MPI-ESM_1pctCO2_r040i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r040i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r040i1850p3_185001-199912.nc' 'SHA256' '60da51c23c2d96825427ebbdd5770def67a393893ceec26002064507ae7e2343'
'sfcWind_Amon_MPI-ESM_1pctCO2_r041i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r041i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r041i1850p3_185001-199912.nc' 'SHA256' 'bcb4e67537a91931344722c95388aff314ab8b9d2f79031715a2914fb21dfaa5'
'sfcWind_Amon_MPI-ESM_1pctCO2_r042i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r042i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r042i1850p3_185001-199912.nc' 'SHA256' 'bb735c6125f914c1380efc1fe27f8ee96a00fcadf294c6cf6ce6bb6af47f7554'
'sfcWind_Amon_MPI-ESM_1pctCO2_r043i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r043i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r043i1850p3_185001-199912.nc' 'SHA256' '592d933840f4f949a19f48fd1229243f673e9c227b2f630c8a74048a7139eea2'
'sfcWind_Amon_MPI-ESM_1pctCO2_r044i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r044i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r044i1850p3_185001-199912.nc' 'SHA256' '19c9bc2e70f89446214fe73eb09844d6b04344ef52327e853b0eca25739bfaa5'
'sfcWind_Amon_MPI-ESM_1pctCO2_r045i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r045i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r045i1850p3_185001-199912.nc' 'SHA256' '0208a730a4bee813e6cac574e75fe3b717bf290adb6a98d2a30ec12da716f5e1'
'sfcWind_Amon_MPI-ESM_1pctCO2_r046i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r046i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r046i1850p3_185001-199912.nc' 'SHA256' '76e5abf98475dd391af28ea4c303655bc23bde1125d4479c170d303ee2fbbb04'
'sfcWind_Amon_MPI-ESM_1pctCO2_r047i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r047i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r047i1850p3_185001-199912.nc' 'SHA256' 'c899b43abf2eaf3e6f74596a3578e7417ab912b9c1b5d12d872f95fe7066874e'
'sfcWind_Amon_MPI-ESM_1pctCO2_r048i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r048i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r048i1850p3_185001-199912.nc' 'SHA256' 'bf84e645c63a94c7c1cf270a29d4ebcc8b9e09c8ff172d0791b44b1ce323e6ea'
'sfcWind_Amon_MPI-ESM_1pctCO2_r049i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r049i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r049i1850p3_185001-199912.nc' 'SHA256' 'ac945bc52df3bf957680f55cfc6e9ac0bf31e625cf28386027ae5c50638c5420'
'sfcWind_Amon_MPI-ESM_1pctCO2_r050i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r050i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r050i1850p3_185001-199912.nc' 'SHA256' '9dac6ae8cea4d21c0eaa415d38715553f5bb714c10cd468ab3a3ff496fa6bc6f'
'sfcWind_Amon_MPI-ESM_1pctCO2_r051i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r051i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r051i1850p3_185001-199912.nc' 'SHA256' 'cc245d32e40790a675c430fac55fac60ef03dad7b82e9ff1abb096518e43560a'
'sfcWind_Amon_MPI-ESM_1pctCO2_r052i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r052i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r052i1850p3_185001-199912.nc' 'SHA256' '281369ffea44f9802b3263eb9b9ac9c6c6ab9a0993633104420c2bad49a18cb7'
'sfcWind_Amon_MPI-ESM_1pctCO2_r053i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r053i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r053i1850p3_185001-199912.nc' 'SHA256' 'c867360069bc73d66f591519fc7b7ac8445b42d71b1fcf47a2b30330b6cda5ce'
'sfcWind_Amon_MPI-ESM_1pctCO2_r054i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r054i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r054i1850p3_185001-199912.nc' 'SHA256' '8ec0b076eea5e7d5cc71aafb2034593dc51b04c9e5db41c4bf46fcd8aa552a7d'
'sfcWind_Amon_MPI-ESM_1pctCO2_r055i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r055i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r055i1850p3_185001-199912.nc' 'SHA256' '462b85361320b9d1c4cb353dc8d85d1b44422695ac719bcccd971c2daf18cfad'
'sfcWind_Amon_MPI-ESM_1pctCO2_r056i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r056i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r056i1850p3_185001-199912.nc' 'SHA256' '033d3990daf01be79c07dbbdd6e1a063d2cf531571ee993b61485a5319f2f7db'
'sfcWind_Amon_MPI-ESM_1pctCO2_r057i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r057i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r057i1850p3_185001-199912.nc' 'SHA256' 'c4f1fc3ff9ea5a78d75347e87f4631960e16fce46d5fdbb92ebbdc307ee10ea1'
'sfcWind_Amon_MPI-ESM_1pctCO2_r058i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r058i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r058i1850p3_185001-199912.nc' 'SHA256' 'a1d893968599fef7660e7217970ad269f3769c8658a000e018c4b4dd9f287015'
'sfcWind_Amon_MPI-ESM_1pctCO2_r059i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r059i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r059i1850p3_185001-199912.nc' 'SHA256' 'aac96889296c48d9423ff56e0cf9ecae179132cba74cbebb663ab78023aa91fd'
'sfcWind_Amon_MPI-ESM_1pctCO2_r060i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r060i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r060i1850p3_185001-199912.nc' 'SHA256' 'cab447b20e0983fba595dffbb918e15f0d4392e88f68ca8264b6bac24b377fbe'
'sfcWind_Amon_MPI-ESM_1pctCO2_r061i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r061i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r061i1850p3_185001-199912.nc' 'SHA256' '4e373aab62f7500eed2ae9344ebd569e9c19d413038f0b5c1db68a1b4caad96c'
'sfcWind_Amon_MPI-ESM_1pctCO2_r062i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r062i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r062i1850p3_185001-199912.nc' 'SHA256' '26242667d3c73eac4662500b377169db2dbe352e78d2dc54e482477ff0615ca5'
'sfcWind_Amon_MPI-ESM_1pctCO2_r063i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r063i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r063i1850p3_185001-199912.nc' 'SHA256' 'dc8a5f81165a0e2dbbd7dd33303a39f6137040156082fac1db9296489847af22'
'sfcWind_Amon_MPI-ESM_1pctCO2_r064i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r064i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r064i1850p3_185001-199912.nc' 'SHA256' '660558f601a92584d1b8436043817f9742c82dbb53f0faa4649edeb4c726fa7d'
'sfcWind_Amon_MPI-ESM_1pctCO2_r065i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r065i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r065i1850p3_185001-199912.nc' 'SHA256' 'c45321d670fc236740f7d4d1bf4d67db20580b3e3e18384310640d98f191b695'
'sfcWind_Amon_MPI-ESM_1pctCO2_r066i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r066i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r066i1850p3_185001-199912.nc' 'SHA256' '9bfb40c464c18fd862618e8a501ddc1ae0d128f07ae5a48a1c14e6eaabb0c947'
'sfcWind_Amon_MPI-ESM_1pctCO2_r067i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r067i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r067i1850p3_185001-199912.nc' 'SHA256' '9a1f16fa5f468277a12eb9c6959791436715fe591c2655e42376c01a8689f8b4'
'sfcWind_Amon_MPI-ESM_1pctCO2_r068i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r068i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r068i1850p3_185001-199912.nc' 'SHA256' '2a365a0fc5952d3765557f489187fafab87023cebd75440801b6cbff1b279fe1'
'sfcWind_Amon_MPI-ESM_1pctCO2_r069i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r069i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r069i1850p3_185001-199912.nc' 'SHA256' '6b4adb60e1f88505a784de51ff10a7f2aa19fdb4b7784f1242d1fc030f3ff86a'
'sfcWind_Amon_MPI-ESM_1pctCO2_r070i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r070i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r070i1850p3_185001-199912.nc' 'SHA256' 'f9a3311256f2a02f15ff3f8af71c3c977b415d0b6eabe5b982a38ab9cd938189'
'sfcWind_Amon_MPI-ESM_1pctCO2_r071i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r071i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r071i1850p3_185001-199912.nc' 'SHA256' '550802229b2d74750390429337f45352e2b1e05edadecd78d8a7fb28e8653553'
'sfcWind_Amon_MPI-ESM_1pctCO2_r072i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r072i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r072i1850p3_185001-199912.nc' 'SHA256' '634c3fbab5eeb0e7db922ecb4b34bf447d4dc6fdf91f10d37105960e95c61cb4'
'sfcWind_Amon_MPI-ESM_1pctCO2_r073i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r073i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r073i1850p3_185001-199912.nc' 'SHA256' 'c34d11a8b08b3d4c3357d151a24246a32688bee7f5dda01a2a0c07de707dc77b'
'sfcWind_Amon_MPI-ESM_1pctCO2_r074i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r074i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r074i1850p3_185001-199912.nc' 'SHA256' 'c0f06b206ba69df16a4c9424b2824dfc81a96bbe3d1a9cfe4abb35f9cd0147c6'
'sfcWind_Amon_MPI-ESM_1pctCO2_r075i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r075i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r075i1850p3_185001-199912.nc' 'SHA256' 'e2c347fef3ba4b4169bad5aa8402fcea9345f10e2bfb11f354797b15e1e0fb18'
'sfcWind_Amon_MPI-ESM_1pctCO2_r076i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r076i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r076i1850p3_185001-199912.nc' 'SHA256' '8b3f17500b8a9e7ce22f24e70d0d3236e8b0bca8262ee35732d8e1cba7cee090'
'sfcWind_Amon_MPI-ESM_1pctCO2_r077i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r077i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r077i1850p3_185001-199912.nc' 'SHA256' '72b9da1adba568d5143774bf3f4461ad02c3e5cfcff71cdb63735b318adb7086'
'sfcWind_Amon_MPI-ESM_1pctCO2_r078i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r078i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r078i1850p3_185001-199912.nc' 'SHA256' '9ec0b2fec91f846bb78ed9820d80a710d80681a2c53c49f45ccdb93678387528'
'sfcWind_Amon_MPI-ESM_1pctCO2_r079i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r079i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r079i1850p3_185001-199912.nc' 'SHA256' '383faf558f987d47b0fe2dc5c74ddb54eb36624f01677e692a7db2e34f67a41f'
'sfcWind_Amon_MPI-ESM_1pctCO2_r080i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r080i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r080i1850p3_185001-199912.nc' 'SHA256' 'cd71477b355b83348da97dd45dffd4aa3317023d23c6affa80c496dea673ddfc'
'sfcWind_Amon_MPI-ESM_1pctCO2_r081i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r081i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r081i1850p3_185001-199912.nc' 'SHA256' '0d8e86aa0e24b04264009d58f7a8bf2ddf86a2b6b8f7d3262cdeabb7be768602'
'sfcWind_Amon_MPI-ESM_1pctCO2_r082i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r082i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r082i1850p3_185001-199912.nc' 'SHA256' 'c67a016cecaa7fbe1563cd7033043bc94cdd39fa35153f7d876eb79d3ff08a58'
'sfcWind_Amon_MPI-ESM_1pctCO2_r083i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r083i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r083i1850p3_185001-199912.nc' 'SHA256' 'b3522677759e4389c57b0a0b7ecaf8195ace22201fae852dd5fab4c2daa5b957'
'sfcWind_Amon_MPI-ESM_1pctCO2_r084i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r084i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r084i1850p3_185001-199912.nc' 'SHA256' '298d22856a0b51bae0b5635c9e17c37eb1ad1ac9c50789bcec37a1b9482c5cad'
'sfcWind_Amon_MPI-ESM_1pctCO2_r085i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r085i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r085i1850p3_185001-199912.nc' 'SHA256' '22061438841beb334ab55335e2122862d5779a990bb5d2e189407d76f9b38096'
'sfcWind_Amon_MPI-ESM_1pctCO2_r086i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r086i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r086i1850p3_185001-199912.nc' 'SHA256' '79e6c955a1870fd62e3d7229389dbdeb5338e436ec5abbfa7645d96a628295d3'
'sfcWind_Amon_MPI-ESM_1pctCO2_r087i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r087i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r087i1850p3_185001-199912.nc' 'SHA256' 'dd7eda17684bbb1a08784fd7b8eb9ffe3cf02e521ca488846e09da286c4a7c89'
'sfcWind_Amon_MPI-ESM_1pctCO2_r088i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r088i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r088i1850p3_185001-199912.nc' 'SHA256' '1b0a0be7a7651ef75de08a42315d785047f84f2e44b1daaf6e91ab216eff2d8b'
'sfcWind_Amon_MPI-ESM_1pctCO2_r089i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r089i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r089i1850p3_185001-199912.nc' 'SHA256' '77b55a4ad775a4df2d92c86e732aa899fd583ef02b25927ef949e015573a2516'
'sfcWind_Amon_MPI-ESM_1pctCO2_r090i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r090i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r090i1850p3_185001-199912.nc' 'SHA256' 'd579329dd74b6ec2fb389b94cf91e2a663814d7d670174f6a56138a05b970b20'
'sfcWind_Amon_MPI-ESM_1pctCO2_r091i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r091i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r091i1850p3_185001-199912.nc' 'SHA256' 'ab446bf5cf64447e5154eae3011c0187ed89ec3b1584a4dd0c8257d0a3f3fd38'
'sfcWind_Amon_MPI-ESM_1pctCO2_r092i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r092i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r092i1850p3_185001-199912.nc' 'SHA256' '2949af42db36cd926385237ab99f813826d415d30f49dc3398ccedd1bac9cbeb'
'sfcWind_Amon_MPI-ESM_1pctCO2_r093i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r093i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r093i1850p3_185001-199912.nc' 'SHA256' '661a37adb45c59073ad32fa211f00645fb4b7ce6351df863b6722cb962b862fd'
'sfcWind_Amon_MPI-ESM_1pctCO2_r094i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r094i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r094i1850p3_185001-199912.nc' 'SHA256' '0a18aa954f2b3a64ffab60de2f0f701b52539f81abe681f2619440fc9a4e7a4a'
'sfcWind_Amon_MPI-ESM_1pctCO2_r095i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r095i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r095i1850p3_185001-199912.nc' 'SHA256' '1cb5a6fdfbe19085e698ef88d17c8d28a4a5708e7747f5b1f48e6f7e4c3ac5d4'
'sfcWind_Amon_MPI-ESM_1pctCO2_r096i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r096i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r096i1850p3_185001-199912.nc' 'SHA256' '7611b15c89de320b58df8212aa29b76cbb35bdb1702b27249948ba6783253f91'
'sfcWind_Amon_MPI-ESM_1pctCO2_r097i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r097i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r097i1850p3_185001-199912.nc' 'SHA256' '64fb325532fed7afbf33051b7804ff5a77db4e0a0a5a9a26a9730034e01e7ebe'
'sfcWind_Amon_MPI-ESM_1pctCO2_r098i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r098i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r098i1850p3_185001-199912.nc' 'SHA256' 'e01c10c4ed5a7dbce4a22a36733d6116aaee4c053dbb86721c6f9aae0500fa82'
'sfcWind_Amon_MPI-ESM_1pctCO2_r099i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r099i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r099i1850p3_185001-199912.nc' 'SHA256' '3b5210cab48e4acc9b6bc96b5b20a69e2850f10e3b78110af7e1ec11afff32a6'
'sfcWind_Amon_MPI-ESM_1pctCO2_r100i1850p3_185001-199912.nc' 'http://esgf1.dkrz.de/thredds/fileServer/mpi-ge/output1/MPI-M/MPI-ESM/1pctCO2/mon/atmos/sfcWind/r100i1850p3/v20190123/sfcWind_Amon_MPI-ESM_1pctCO2_r100i1850p3_185001-199912.nc' 'SHA256' '5238ded144f0c6f717a293da67c76d671847c68a38ed8d84f42e91d645bf8cbd'
EOF--dataset.file.url.chksum_type.chksum
)"

# ESG_HOME should point to the directory containing ESG credentials.
#   Default is $HOME/.esg
ESG_HOME=${ESG_HOME:-$HOME/.esg}
[[ -d $ESG_HOME ]] || mkdir -p $ESG_HOME

ESG_CREDENTIALS=${X509_USER_PROXY:-$ESG_HOME/credentials.pem}
ESG_CERT_DIR=${X509_CERT_DIR:-$ESG_HOME/certificates}
MYPROXY_STATUS=$HOME/.MyProxyLogon
COOKIE_JAR=$ESG_HOME/cookies
MYPROXY_GETCERT=$ESG_HOME/getcert.jar
CERT_EXPIRATION_WARNING=$((60 * 60 * 8))   #Eight hour (in seconds)

WGET_TRUSTED_CERTIFICATES=$ESG_HOME/certificates


# Configure checking of server SSL certificates.
#   Disabling server certificate checking can resolve problems with myproxy
#   servers being out of sync with datanodes.
CHECK_SERVER_CERT=${CHECK_SERVER_CERT:-Yes}

check_os() {
    local os_name=$(uname | awk '{print $1}')
    case ${os_name} in
        Linux)
            ((debug)) && echo "Linux operating system detected"
            LINUX=1
            MACOSX=0
            ;;
        Darwin)
            ((debug)) && echo "Mac OS X operating system detected"
            LINUX=0
            MACOSX=1
            ;;
        *)
            echo "Unrecognized OS [${os_name}]"
            return 1
            ;;
    esac
    return 0
}

#taken from http://stackoverflow.com/a/4025065/1182464
vercomp () {
    if [[ $1 == $2 ]]
    then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++))
    do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++))
    do
        if [[ -z ${ver2[i]} ]]
        then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]}))
        then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]}))
        then
            return 2
        fi
    done
    return 0
}

check_commands() {
    #check wget
    local MIN_WGET_VERSION=1.10
    vercomp $(wget -V | sed -n 's/^.* \([1-9]\.[0-9.]*\) .*$/\1/p') $MIN_WGET_VERSION
    case $? in
        2) #lower
            wget -V
            echo
            echo "** ERROR: wget version is too old. Use version $MIN_WGET_VERSION or greater. **" >&2
            exit 1
    esac
}

usage() {
    echo "Usage: $(basename $0) [flags] [openid] [username]"
    echo "Flags is one of:"
    sed -n '/^while getopts/,/^done/  s/^\([^)]*\)[^#]*#\(.*$\)/\1 \2/p' $0
    echo
    echo "This command stores the states of the downloads in .$0.status"
    echo "For more information check the website: http://esgf.org/wiki/ESGF_wget"
}

#defaults
debug=0
clean_work=1

#parse flags
while getopts ':c:pfF:o:w:isuUndvqhHI:T' OPT; do
    case $OPT in
        H) skip_security=1 && use_http_sec=1;; #       : Authenticate with OpenID (username,) and password, without the need for a certificate.
        T) force_TLSv1=1;;              #       : Forces wget to use TLSv1. 
        c) ESG_CREDENTIALS="$OPTARG";;  #<cert> : use this certificate for authentication.
        f) force=1;;                    #       : force certificate retrieval (defaults to only once per day); for certificate-less authentication (see -H option), this flag will force login and refresh cookies.
        F) input_file="$OPTARG";;       #<file> : read input from file instead of the embedded one (use - to read from stdin)
        o) openId="$OPTARG";;           #<openid>: Provide OpenID instead of interactively asking for it.
        I) username_supplied="$OPTARG";;    #<user_id> : Explicitly set user ID.  By default, the user ID is extracted from the last component of the OpenID URL.  Use this flag to override this behaviour.                   
        w) output="$OPTARG";;           #<file> : Write embedded files into a file and exit
        i) insecure=1;;                 #       : set insecure mode, i.e. don't check server certificate
        s) skip_security=1 && use_cookies_for_http_basic_auth_start=1;;            #       : completely skip security. It will only work if the accessed data is not secured at all. -- works only if the accessed data is unsecured or a certificate exists or cookies are saved (latter applies to -H option only).
        u) update=1;;                   #       : Issue the search again and see if something has changed.
        U) update_files=1;;             #       : Update files from server overwriting local ones (detect with -u)
        n) dry_run=1;;                  #       : Don't download any files, just report.
        p) clean_work=0;;               #       : preserve data that failed checksum
        d) verbose=1;debug=1;;          #       : display debug information
        v) verbose=1;;                  #       : be more verbose
        q) quiet=1;;                    #       : be less verbose
        h) usage && exit 0;;            #       : displays this help
        \?) echo "Unknown option '$OPTARG'" >&2 && usage && exit 1;;
        \:) echo "Missing parameter for flag '$OPTARG'" >&2 && usage && exit 1;;
    esac
done
shift $(($OPTIND - 1))

#setup input as desired by the user
if [[ "$input_file" ]]; then
    if [[ "$input_file" == '-' ]]; then
        download_files="$(cat)" #read from STDIN
        exec 0</dev/tty #reopen STDIN as cat closed it
    else
        download_files="$(cat $input_file)" #read from file
    fi
fi

#if -w (output) was selected write file and finish:
if [[ "$output" ]]; then
    #check the file
    if [[ -f "$output" ]]; then
        read -p "Overwrite existing file $output? (y/N) " answ
        case $answ in y|Y|yes|Yes);; *) echo "Aborting then..."; exit 0;; esac
    fi
    echo "$download_files">$output
    exit
fi


#assure we have everything we need
check_commands

if ((update)); then
    echo "Checking the server for changes..."
    new_wget="$(wget "$search_url" -qO -)"
    compare_cmd="grep -vE '^(# Generated by|# Search URL|search_url=)'"
    if diff -q <(eval $compare_cmd<<<"$new_wget") <(eval $compare_cmd $0) >/dev/null; then
        echo "No changes detected."
    else
        echo "Wget was changed. Dowloading. (old renamed to $0.old.#N)"
        counter=0
        while [[ -f $0.old.$counter ]]; do ((counter++)); done
        mv $0 $0.old.$counter
        echo "$new_wget" > $0
    fi
    exit 0      
fi


##############################################################################
check_java() {
    if ! type java >& /dev/null; then
        echo "Java could not be found." >&2
        return 1
    fi
    if java -version 2>&1|grep openjdk >/dev/null; then
        openjdk=1;
    else
        openjdk=0;
    fi
    jversion=($(jversion=$(java -version 2>&1 | awk '/version/ {gsub("\"","");print $3}'); echo ${jversion//./ }))
    mVer=${jversion[1]}
    if [ $openjdk -eq 1 ]; then
        mVer=${jversion[0]}
        if ((mVer<5)); then
            echo "Openjdk detected. Version 9+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    else
    
        if ((mVer<5)); then
            echo "Java version 1.5+ is required for retrieving the certificate." >&2
            echo "Current version seems older: $(java -version | head -n1) " >&2
            return 1
        fi
    fi
}

check_myproxy_logon() {
    if ! type myproxy-logon >& /dev/null; then
	echo "myproxy-logon could not be found." >&2
	return 1
    fi
    echo "myproxy-logon found" >&2
}

proxy_to_java() {
    local proxy_user proxy_pass proxy_server proxy_port
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$http_proxy)
    local JAVA_PROXY=
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttp.proxyPort=$proxy_port"
    eval $(sed 's#^\(https\?://\)\?\(\([^:@]*\)\(:\([^@]*\)\)\?@\)\?\([^:/]*\)\(:\([0-9]*\)\)\?.*#proxy_user=\3;proxy_pass=\5;proxy_server=\6;proxy_port=\8#'<<<$https_proxy)
    [[ "$proxy_server" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyHost=$proxy_server"
    [[ "$proxy_port" ]] && JAVA_PROXY=$JAVA_PROXY" -Dhttps.proxyPort=$proxy_port"
    
    echo "$JAVA_PROXY"
}

# get certificates from github
get_certificates() {
    # don't if this was already done today
    [[ -z $force && "$(find $ESG_CERT_DIR -type d -mtime -1 2>/dev/null)" ]] && return 0
    echo -n "Retrieving Federation Certificates..." >&2

    if ! wget -O $ESG_HOME/esg-truststore.ts --no-check-certificate https://github.com/ESGF/esgf-dist/raw/master/installer/certs/esg-truststore.ts; then
        echo "Could not fetch esg-truststore";
        return 1
    fi
    
    if ! wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar -O - -q | tar x -C $ESG_HOME; then
        #certificates tarred into esg_trusted_certificates. (if it breaks, let the user know why
        wget --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/esg_trusted_certificates.tar
        echo "Could't update certs!" >&2
        return 1
    else
        #if here everythng went fine. Replace old cert with this ones    
        [[ -d $ESG_CERT_DIR ]] && rm -r $ESG_CERT_DIR || mkdir -p $(dirname $ESG_CERT_DIR)
        mv $ESG_HOME/esg_trusted_certificates $ESG_CERT_DIR
        touch $ESG_CERT_DIR
        echo "done!" >&2
    fi

}

# Retrieve ESG credentials
unset pass
get_credentials() {
    if check_java
    then
	use_java=1
    else	
	use_java=0
	echo "No suitable java for obtaining certificate - checking for myproxy-logon instead" >&2
	check_myproxy_logon || exit 1
    fi
    #get all certificates
    get_certificates

    if [[ -z "$(find $MYPROXY_GETCERT -type f -mtime -1 2>/dev/null)" ]]; then
        echo -n "(Downloading $MYPROXY_GETCERT... "
        mkdir -p $(dirname $MYPROXY_GETCERT)
        if wget -q --no-check-certificate https://raw.githubusercontent.com/ESGF/esgf-dist/master/installer/certs/getcert.jar -O $MYPROXY_GETCERT;then
            echo 'done)'
            touch $MYPROXY_GETCERT
        else
            echo 'failed)'
        fi
    fi

    #if the user already defined one, use it
    if [[ -z $openId ]]; then
        #try to parse the last valid value if any
        [[ -f "$MYPROXY_STATUS" ]] && openId=$(awk -F= '/^OpenID/ {gsub("\\\\", ""); print $2}' $MYPROXY_STATUS)
        if [[ -z $openId ]]; then
            #no OpenID, we need to ask the user
            echo -n "Please give your OpenID (Example: https://myserver/example/username) ? "
        else
            #Allow the user to change it if desired
            echo -n "Please give your OpenID (hit ENTER to accept default: $openId)? "
        fi
        read -e
        [[ "$REPLY" ]] && openId="$REPLY"
    else
        ((verbose)) && echo "Using user defined OpenID $openId (to change use -o <open_id>)"
    fi

    if grep -q ceda.ac.uk <<<$openId; then
        username=${openId##*/}
        echo -n "Please give your username if different [$username]: "
        read -e
        [[ "$REPLY" ]] && username="$REPLY"
    fi
    


    if [ $use_java -eq 1 ]
    then
        local args=
        #get password
	[[ ! "$pass" ]] && read -sp "MyProxy Password? " pass
        [[ "$openId" ]] && args=$args" --oid $openId"
        [[ "$pass" ]] && args=$args" -P $pass"
        [[ "$username" ]] && args=$args" -l $username"
        
        echo -n $'\nRetrieving Credentials...' >&2
        if ! java $(proxy_to_java) -jar $MYPROXY_GETCERT $args --ca-directory $ESG_CERT_DIR --output $ESG_CREDENTIALS ; then        
            echo "Certificate could not be retrieved"
            exit 1
        fi
        echo "done!" >&2
    else
        args=`openid_to_myproxy_args $openId $username` || exit 1
        if ! myproxy-logon $args -b -o $ESG_CREDENTIALS
	then
            echo "Certificate could not be retrieved"
	    exit 1
        fi
	cp $HOME/.globus/certificates/* $ESG_CERT_DIR/	
    fi
}

openid_to_myproxy_args() {
  python - <<EOF || exit 1
import sys
import re
import xml.etree.ElementTree as ET
import urllib2
openid = "$1"
username = "$2" or re.sub(".*/", "", openid)
e = ET.parse(urllib2.urlopen(openid))
servs = [el for el in e.getiterator() if el.tag.endswith("Service")]
for serv in servs:
    servinfo = dict([(re.sub(".*}", "", c.tag), c.text)
                     for c in serv.getchildren()])
    try:
        if servinfo["Type"].endswith("myproxy-service"):
            m = re.match("socket://(.*):(.*)", servinfo["URI"])
            if m:
                host = m.group(1)
                port = m.group(2)
                print "-s %s -p %s -l %s" % (host, port, username)
                break
    except KeyError:
        continue
else:
    sys.stderr.write("myproxy service could not be found\n")
    sys.exit(1)
EOF
}

# check the certificate validity
check_cert() {
    if [[ ! -f "$ESG_CERT" || $force ]]; then
        #not there, just get it
        get_credentials
    elif which openssl &>/dev/null; then
        #check openssl and certificate
        if ! openssl x509 -checkend $CERT_EXPIRATION_WARNING -noout -in $ESG_CERT 2>/dev/null; then
            echo "The certificate expires in less than $((CERT_EXPIRATION_WARNING / 60 / 60)) hour(s). Renewing..."
            get_credentials
        else
            #ok, certificate is fine
            return 0
        fi
    fi
}

#
# Detect ESG credentials
#
find_credentials() {

    #is X509_USER_PROXY or $HOME/.esg/credential.pem
    if [[ -f "$ESG_CREDENTIALS" ]]; then
        # file found, proceed.
        ESG_CERT="$ESG_CREDENTIALS"
        ESG_KEY="$ESG_CREDENTIALS"
    elif [[ -f "$X509_USER_CERT" && -f "$X509_USER_KEY" ]]; then
        # second try, use these certificates.
        ESG_CERT="$X509_USER_CERT"
        ESG_KEY="$X509_USER_KEY"
    else
        # If credentials are not present, just point to where they should go 
        echo "No ESG Credentials found in $ESG_CREDENTIALS" >&2
            ESG_CERT="$ESG_CREDENTIALS"
            ESG_KEY="$ESG_CREDENTIALS"
            #they will be retrieved later one
    fi


    #chek openssl and certificate
    if (which openssl &>/dev/null); then
        if ( openssl version | grep 'OpenSSL 1\.0' ); then
            echo '** WARNING: ESGF Host certificate checking might not be compatible with OpenSSL 1.0+'
        fi
        check_cert || { (($?==1)); exit 1; }
    fi
    
    if [[ $CHECK_SERVER_CERT == "Yes" ]]; then
        [[ -d "$ESG_CERT_DIR" ]] || { echo "CA certs not found. Aborting."; exit 1; }
        PKI_WGET_OPTS="--ca-directory=$ESG_CERT_DIR"
    fi

    #some wget version complain if there's no file present
    [[ -f $COOKIE_JAR ]] || touch $COOKIE_JAR

    PKI_WGET_OPTS="$PKI_WGET_OPTS --certificate=$ESG_CERT --private-key=$ESG_KEY --save-cookies=$COOKIE_JAR --load-cookies=$COOKIE_JAR --ca-certificate=$ESG_CERT"

}

check_chksum() {
    local file="$1"
    local chk_type=$2
    local chk_value=$3
    local local_chksum=Unknown

    case $chk_type in
        md5) local_chksum=$(md5sum_ $file | cut -f1 -d" ");;
        sha256) local_chksum=$(sha256sum_ $file|awk '{print $1}'|cut -d ' ' -f1);;
        *) echo "Can't verify checksum." && return 0;;
    esac

    #verify
    ((debug)) && echo "local:$local_chksum vs remote:$chk_value" >&2
    echo $local_chksum
}

#Our own md5sum function call that takes into account machines that don't have md5sum but do have md5 (i.e. mac os x)
md5sum_() {
    hash -r
    if type md5sum >& /dev/null; then
        echo $(md5sum $@)
    else
        echo $(md5 $@ | sed -n 's/MD5[ ]*\(.*\)[^=]*=[ ]*\(.*$\)/\2 \1/p')
    fi
}

#Our own sha256sum function call that takes into account machines that don't have sha256sum but do have sha2 (i.e. mac os x)
sha256sum_() {
    hash -r
    if type sha256sum >& /dev/null; then
        echo $(sha256sum $@)
    elif type shasum >& /dev/null; then
        echo $(shasum -a 256 $@)
    else
        echo $(sha2 -q -256 $@)
    fi
}

get_mod_time_() {
    if ((MACOSX)); then
        #on a mac modtime is stat -f %m <file>
        echo "$(stat -f %m $@)"
    else
        #on linux (cygwin) modtime is stat -c %Y <file>
        echo "$(stat -c %Y $@)"
    fi
    return 0;
}

remove_from_cache() {
    local entry="$1"
    local tmp_file="$(grep -ve "^$entry" "$CACHE_FILE")"
    echo "$tmp_file" > "$CACHE_FILE"
    unset cached
}

#Download data from node using cookies and not certificates.
download_http_sec()
{
  #The data to be downloaded.
  data=" $url"
  filename="$file"  

  #Wget args.
  if ((insecure)) 
  then
   wget_args=" --no-check-certificate --cookies=on  --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt " 
  else
   wget_args=" --ca-directory=$WGET_TRUSTED_CERTIFICATES --cookies=on --keep-session-cookies --save-cookies $COOKIES_FOLDER/wcookies.txt "  
  fi 

  if ((use_cookies_for_http_basic_auth_start)) || ((use_cookies_for_http_basic_auth)) 
  then
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
  fi
  
  if((force_TLSv1))
  then
   wget_args=" $wget_args"" --secure-protocol=TLSv1 "
  fi
  
  
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
    wget_args="$wget_args $ESGF_WGET_OPTS"
  fi  
  

  #use cookies for the next downloads
  use_cookies_for_http_basic_auth=1;
   
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "wget $wget_args $data\n"
  fi


  #Try to download the data. 
  command="wget $wget_args -O $filename $data"
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
      
  #Extract orp service from url ?
  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" == 1 )) && 
  if  echo "$http_resp" | grep -q "/esg-orp/"      
  then
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   orp_service=$(echo "$urls" | tr '\n' ' ' | cut -d' ' -f 2)


   #Use cookies for transaction with orp.
   wget_args=" $wget_args"" --load-cookies $COOKIES_FOLDER/wcookies.txt"    
   
   #Download data using either http basic auth or http login form.
   if [[ "$openid_c" == */openid/  || "$openid_c" == */openid ]]
   then
    download_http_sec_open_id
   else
    download_http_sec_decide_service
   fi
  else  
   if    echo "$http_resp" | grep -q "401 Unauthorized"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || echo "$http_resp" | grep -q "Connection timed out."  \
      || echo "$http_resp" | grep -q "no-check-certificate"  \
      || (( $cmd_exit_status != 0 ))      
   then 
    echo "ERROR : http request to OpenID Relying Party service failed."
    failed=1
   fi
  fi
}


#Function that decides which implementaion of idp to use.
download_http_sec_decide_service()
{
  #find claimed id

  pos=$(echo "$openid_c" | egrep -o '/' | wc -l)
  username_c=$(echo "$openid_c"  | cut -d'/' -f "$(($pos + 1))")
  esgf_uri=$(echo "$openid_c" | egrep -o '/esgf-idp/openid/')

  host=$(echo "$openid_c"  | cut -d'/' -f 3)
  #test ceda first.

  if [[ -z "$esgf_uri" ]]
  then
   openid_c_tmp="https://""$host""/openid/"
  else
   openid_c_tmp="https://""$host""/esgf-idp/openid/" 
  fi

  command="wget "$openid_c_tmp" --no-check-certificate ${force_TLSv1:+--secure-protocol=TLSv1} -O-"
        
  if [[ ! -z "$ESGF_WGET_OPTS" ]]
  then
   command="$command $ESGF_WGET_OPTS"
  fi  
          
  #Debug message.
  if  ((debug))
  then
   echo -e "\nExecuting:\n"
   echo -e "$command\n"
  fi
            

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
  

  if    echo "$http_resp" | grep -q "[application/xrds+xml]"  \
     && echo "$http_resp" | grep -q "200 OK"  \
     && (( cmd_exit_status == 0 ))       
  then
   openid_c=$openid_c_tmp
   download_http_sec_open_id
  else
   if [[ -z "$esgf_uri" ]]
   then
    echo "ERROR : HTTP request to OpenID Relying Party service failed."
    failed=1
   else
   download_http_sec_cl_id
   fi
  fi
}


download_http_sec_retry()
{
  echo -e "\nRetrying....\n"
  #Retry in case that last redirect did not work, this happens with older version of wget.
  command="wget $wget_args $data"
      
  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi   
   
  http_resp=$(eval $command  2>&1) 
  cmd_exit_status="$?"

  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi
   
  if    echo "$http_resp" | grep -q "401 Unauthorized"  \
     || echo "$http_resp" | grep -q "403: Forbidden"  \
     || echo "$http_resp" | grep -q "Connection timed out."  \
     || echo "$http_resp" | grep -q "no-check-certificate"  \
     || (( $cmd_exit_status != 0 ))      
  then 
   echo -e "\nERROR : Retry failed.\n"
   #rm "$filename"
   failed=1
  fi #if retry failed.
}

#Function for downloading data using the claimed id.
download_http_sec_cl_id()
{
  #Http request for sending openid to the orp service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\"  $wget_args -O- https://$orp_service/esg-orp/j_spring_openid_security_check.htm "

  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "wget $command\n"
  fi 
  
  
  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"

  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 
    
  
  #Extract orp service from openid ?
  #Evaluate response.If redirected to idp service send the credentials.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( redirects == 2  )) && 
  if  echo "$http_resp" | grep -q "login.htm"  && (( cmd_exit_status == 0 ))   
  then 
  
   urls=$(echo "$http_resp" | egrep -o 'https://[^ ]+' | cut -d'/' -f 3)
   idp_service=$(echo "$urls"  | tr '\n' ' ' | cut -d' ' -f 2) 
      
   command="wget --post-data  password=\"$password_c\" $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$idp_service/esgf-idp/idp/login.htm"
   

   #Debug message.
   if  ((debug))
   then
    echo -e "Executing:\n"
    echo -e "wget $command\n"
   fi 

   #Execution of command.
   http_resp=$(eval $command  2>&1)
   cmd_exit_status="$?"
      
   if ((debug))
   then
    echo -e "\nHTTP response:\n $http_resp\n"
   fi 
        
   #Evaluate response. 
   #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
   #(( "$redirects" != 5 )) \ 
   if    echo "$http_resp" | grep -q "text/html"  \
      || echo "$http_resp" | grep -q "403: Forbidden"  \
      || (( cmd_exit_status != 0 ))        
   then 
    rm "$filename"
    download_http_sec_retry
   fi
 
  else
   echo "ERROR : HTTP request to OpenID Provider service failed."
   failed=1
  fi #if redirected to idp.  
}



download_http_sec_open_id()
{
  #Http request for sending openid to the orp web service.
  command="wget --post-data \"openid_identifier=$openid_c&rememberOpenid=on\" --header=\"esgf-idea-agent-type:basic_auth\" --http-user=\"$username_c\" --http-password=\"$password_c\"  $wget_args ${quiet:+-q} ${quiet:--v} -O $filename https://$orp_service/esg-orp/j_spring_openid_security_check.htm "


  #Debug message.
  if  ((debug))
  then
   echo -e "Executing:\n"
   echo -e "$command\n"
  fi 

  #Execution of command.
  http_resp=$(eval $command  2>&1)
  cmd_exit_status="$?"
  
  
  if ((debug))
  then
   echo -e "\nHTTP response:\n $http_resp\n"
  fi 

  #Evaluate response.
  #redirects=$(echo "$http_resp" | egrep -c ' 302 ')
  #(( "$redirects" != 7 )) ||
  if   echo "$http_resp" | grep -q "text/html"  ||  (( $cmd_exit_status != 0 ))   
  then
   rm "$filename"
   download_http_sec_retry     
  fi #if error during http basic authentication. 
  
}


download() {
    wget="wget ${insecure:+--no-check-certificate} ${quiet:+-q} ${quiet:--v} -c ${force_TLSv1:+--secure-protocol=TLSv1} $PKI_WGET_OPTS"
    
    while read line
    do
        # read csv here document into proper variables
        eval $(awk -F "' '" '{$0=substr($0,2,length($0)-2); $3=tolower($3); print "file=\""$1"\";url=\""$2"\";chksum_type=\""$3"\";chksum=\""$4"\""}' <(echo $line) )

        #Process the file
        echo -n "$file ..."

        #get the cached entry if any.
        cached="$(grep -e "^$file" "$CACHE_FILE")"
        
        #if we have the cache entry but no file, clean it.
        if [[ ! -f $file && "$cached" ]]; then
            #the file was removed, clean the cache
            remove_from_cache "$file"
            unset cached
        fi
        
        #check it wasn't modified
        if [[ -n "$cached" && "$(get_mod_time_ $file)" == $(echo "$cached" | cut -d ' ' -f2) ]]; then
                    if [[ "$chksum" == "$(echo "$cached" | cut -d ' ' -f3)" ]]; then
                echo "Already downloaded and verified"
                continue
            elif ((update_files)); then
                #user want's to overwrite newer files
                rm $file
                remove_from_cache "$file"
                unset cached
            else
                #file on server is different from what we have. 
                echo "WARNING: The remote file was changed (probably a new version is available). Use -U to Update/overwrite"
                continue
            fi
        fi
        unset chksum_err_value chksum_err_count
        
        while : ; do
            # (if we had the file size, we could check before trying to complete)
            echo "Downloading"
            [[ ! -d "$(dirname "$file")" ]] && mkdir -p "$(dirname "$file")"
            if ((dry_run)); then
                #all important info was already displayed, if in dry_run mode just abort
                #No status will be stored
                break
            else
                if ((use_http_sec))
                then
                 download_http_sec
                 if ((failed))
                 then
                  break
                 fi
                else
                 $wget -O "$file" $url || { failed=1; break; }  
                fi                
            fi

            #check if file is there
            if [[ -f $file ]]; then
                ((debug)) && echo file found
                if [[ ! "$chksum" ]]; then
                    echo "Checksum not provided, can't verify file integrity"
                    break
                fi
                result_chksum=$(check_chksum "$file" $chksum_type $chksum)
                if [[ "$result_chksum" != "$chksum" ]]; then
                    echo "  $chksum_type failed!"
                    if ((clean_work)); then
                        if !((chksum_err_count)); then
                                chksum_err_value=$result_chksum
                                chksum_err_count=2
                            elif ((checksum_err_count--)); then
                                if [[ "$result_chksum" != "$chksum_err_value" ]]; then
                                    #this is a real transmission problem
                                    chksum_err_value=$result_chksum
                                    chksum_err_count=2
                                fi
                            else
                                #ok if here we keep getting the same "different" checksum
                                echo "The file returns always a different checksum!"
                                echo "Contact the data owner to verify what is happening."
                                echo
                                sleep 1
                                break
                            fi
                        
                            rm $file
                            #try again
                            echo -n "  re-trying..."
                            continue
                    else
                            echo "  don't use -p or remove manually."
                    fi
                else
                    echo "  $chksum_type ok. done!"
                    echo "$file" $(get_mod_time_ "$file") $chksum >> $CACHE_FILE
                fi
            fi
            #done!
            break
        done
        
        if ((failed)); then
            echo "download failed"
            # most common failure is certificate expiration, so check this
            #if we have the pasword we can retrigger download
            ((!skip_security)) && [[ "$pass" ]] && check_cert
            unset failed
        fi
        
done <<<"$download_files"

}

dedup_cache_() {
    local file=${1:-${CACHE_FILE}}
    ((debug)) && echo "dedup'ing cache ${file} ..."
    local tmp=$(LC_ALL='C' sort  -r -k1,2 $file | awk '!($1 in a) {a[$1];print $0}' | sort -k2,2)
    ((DEBUG)) && echo "$tmp"
    echo "$tmp" > $file
    ((debug)) && echo "(cache dedup'ed)"
}

http_basic_auth_func_info_message()
{
  echo  "********************************************************************************"
  echo  "*                                                                              *"
  echo  "* Note that new functionality to allow authentication without the need for     *"
  echo  "* certificates is available with this version of the wget script.  To enable,  *"
  echo  "* use the \"-H\" option and enter your OpenID and password when prompted:        *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -H [options...]                                     *"
  echo  "*                                                                              *"
  echo  "* For a full description of the available options use the help option:         *"
  echo  "*                                                                              *"
  echo  "* $ "$(basename "$0")" -h                                                  *"
  echo  "*                                                                              *"
  echo  "********************************************************************************"
}

#
# MAIN
#

if ((!use_http_sec))
then 
 http_basic_auth_func_info_message
fi

echo "Running $(basename $0) version: $version"
((verbose)) && echo "we use other tools in here, don't try to user their proposed 'options' directly"
echo "Use $(basename $0) -h for help."$'\n'

((debug)) && cat<<EOF
** Debug info **
ESG_HOME=$ESG_HOME
ESG_CREDENTIALS=$ESG_CREDENTIALS
ESG_CERT_DIR=$ESG_CERT_DIR
** -- ** -- ** -- ** --

EOF


cat <<'EOF-MESSAGE'
Script created for 100 file(s)
(The count won't match if you manually edit this file!)



EOF-MESSAGE
sleep 1

check_os
((!skip_security)) && find_credentials

if ((use_http_sec))
then 
     
 if (( ! insecure))
 then 
  get_certificates
 fi

 #Cookies folder.
 COOKIES_FOLDER="$ESG_HOME/wget_cookies"
 
 if (( force ))
 then
  if [ -d $COOKIES_FOLDER ] 
  then
   rm -rf $COOKIES_FOLDER
  fi
 fi

 #Create cookies folder. 
 if [[ ! -d $COOKIES_FOLDER ]] 
 then
  mkdir $COOKIES_FOLDER
 fi
 
 if((! use_cookies_for_http_basic_auth_start))
 then

  #Read openid.
  if [[ ! -z "$openId" ]]
  then
   openid_c="$openId"
  elif ( (("$#" > 1)) || (("$#" == 1)) ) 
  then
   openid_c=$1
  else
   read -p    "Enter your openid : " openid_c
  fi
  
  
  #Read username.
  if [[ ! -z "$username_supplied" ]]
  then
   username_c="$username_supplied"
  elif (("$#" == 2))
  then
   username_c=$2
  elif [[ "$openid_c" == */openid/ || "$openid_c" == */openid ]]
  then
   read -p    "Enter username : " username_c
  fi
  
  #Read password.
  read -s -p "Enter password : " password_c
  echo -e "\n"

 fi #use cookies

fi #use_http_sec 


#do we have old results? Create the file if not
[ ! -f $CACHE_FILE ] && echo "#filename mtime checksum" > $CACHE_FILE && chmod 666 $CACHE_FILE

#clean the force parameter if here (at htis point we already have the certificate)
unset force

download

dedup_cache_


echo "done"
